#!/bin/bash
#
# bee - wrapper script for the various bee-tools
#
# Copyright (C) 2009-2011
#       Marius Tolzmann <tolzmann@molgen.mpg.de>
#       Tobias Dreyer <dreyer@molgen.mpg.de>
#       and other bee developers
#
# This file is part of bee.
#
# bee is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

BEE_VERSION="@BEE_VERSION@"

: ${BEE_SYSCONFDIR:=@SYSCONFDIR@}
: ${BEE_DEFCONFDIR:=@DEFCONFDIR@}
: ${BEE_DATADIR:=@DATADIR@}
: ${BEE_LIBDIR:=@LIBDIR@}
: ${BEE_LIBEXECDIR:=@LIBEXECDIR@}
: ${BEE_BINDIR:=@BINDIR@}

# load libs
. ${BEE_LIBEXECDIR}/bee/beelib.config.sh

function usage() {
    cat <<-EOF
	bee v${BEE_VERSION} 2009-2011
	  by Marius Tolzmann and Tobias Dreyer <{tolzmann,dreyer}@molgen.mpg.de>
	     Max Planck Institute for Molecular Genetics Berlin Dahlem

	Usage: bee <tool> [options]

	Tools:
	  init
	  install
	  remove
	  check
	  query
	  list

	EOF
}

function search_tool_cmd {
    local IFS=":${IFS}"
    local tool=${1}

    if [ -z "${tool}" ] ; then
        return
    fi

    CMD=

    for dir in ${XDG_CONFIG_HOME} ${XDG_CONFIG_DIRS} ${BEE_LIBEXECDIR} ; do
        cmd="${dir}/bee/bee.d/bee-${tool}"
        if [ -x "${cmd}" ] ; then
            CMD=${cmd}
            return
        fi
    done
}


options=$(${BEE_BINDIR}/beegetopt --name=bee \
    --option=print-config \
    -- "${@}")

eval set -- "${options}"

declare -i OPT_PRINTCONFIG=0

while true ; do
    case "$1" in
        --print-config)
            shift
            OPT_PRINTCONFIG=1
            ;;
        --)
            shift
            break
            ;;
    esac
done


TOOL=${1}

config_init_colors

config_init

config_export

if [ ${OPT_PRINTCONFIG} = 1 ] ; then
    config_print
    exit 0
fi

search_tool_cmd ${TOOL}

if [ ! -z  "${CMD}" ] ; then
    shift
    exec ${CMD} ${@}
    exit 1
fi

usage
exit 1
