#!/bin/bash
#
# bee-list - list bee packages
#
# Copyright (C) 2009-2011
#       Marius Tolzmann <tolzmann@molgen.mpg.de>
#       Tobias Dreyer <dreyer@molgen.mpg.de>
#       and other bee developers
#
# This file is part of bee.
#
# bee is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

if [ -z "${BEE_VERSION}" ] ; then
    echo >&2 "BEE-ERROR: please call $0 from bee .."
    exit 1
fi

VERSION=${BEE_VERSION}

: ${BEE_BINDIR:=@BINDIR@}

#
# BUGS TO FIX/FEATURES TO ADD:
#   - lists are alpha-num sorted and not as pkg-versions ..
#   - check for grep -P support and use it..

ARCH=$(uname -m)

#
# print usage information
#
usage() {
    cat <<-EOF
	bee-list v${VERSION} 2009-2012
	  by Marius Tolzmann and Tobias Dreyer <{tolzmann,dreyer}@molgen.mpg.de>
	     Max Planck Institute for Molecular Genetics Berlin Dahlem

	Usage: bee list <action> [pattern list]

	Actions:
	    -i | --installed (default) list installed pkgs matching pattern list
	    -a | --available           list available pkgs matching pattern list

	EOF
}

#
# lists installed packages
#   RETURNS a sorted list of installed packages
#
list_installed() {
    if [ ! -r "${BEE_METADIR}" ] ; then
        return
    fi
    find ${BEE_METADIR} -mindepth 1 -maxdepth 1 -type d -printf "%f\n" \
        | sort
}

#
# lists available packages
#   RETURNS a sorted list of packages available in ${BEE_PKGDIR}
#   or in any directory in ${BEE_PKGPATH}
#
list_available() {
    local IFS=":${IFS}"
    # prepare for repository paths..
    : ${BEE_PKGPATH:=${BEE_PKGDIR}}

    # replace all ':' with ' ' in BEE_PKGPATH
    path=${BEE_PKGPATH//:/ }

    search=""
    for p in $path ; do
        if [ -r "${p}" ] ; then
            search="${search} ${p}"
        fi
    done

    if [ -z "${search}" ] ; then
        return
    fi

    if [ "${OPT_PATHNAME}" == "yes" ] ; then
        find ${search} -mindepth 1 -maxdepth 1 -printf "%p\n" \
            | sort
    else
        find ${search} -mindepth 1 -maxdepth 1 -printf "%f\n" \
            | sed -e "s@\.iee\.tar\..*\$@@" \
                  -e "s@\.bee\.tar\..*\$@@" \
            | sort
    fi
}

#
# list bee packages
#   ARGUMENTS are $mode (installed|available) and a list of $patterns
#   RETURNS a list of $mode packages matching all given $patterns
#
list_beepackages() {
    mode=${1}
    shift

    # if more than one pattern is given all patterns have to match (AND)
    thegrep=""
    for p in "${@}" ; do
        thegrep="${thegrep} | grep -i -F -e '${p}' "
    done

    if [ "${mode}" = "available" ] ; then
        list_cmd="list_available"
    else
        list_cmd="list_installed"
    fi

    # execute the search and display results..
    eval ${list_cmd} ${thegrep}
}


################################################################################
################################################################################
################################################################################

options=$(${BEE_BINDIR}/beegetopt --name bee-list \
                 --option available/a \
                 --option installed/i \
                 --option display-pathname \
                 --option exact/by-pkgfullname \
                 --option help/h \
                 --option debug \
                 -- "$@")

if [ $? != 0 ] ; then
    usage
    exit 1
fi

eval set -- "${options}"

filter=""

OPT_EXACT="no"
OPT_PATHNAME="no"

DEBUG=":"
while true ; do
    case "$1" in
        --help)
            usage
            exit 0
            ;;
        --available)
            shift
            filter="available"
            ;;
        --installed)
            shift
            filter="installed"
            ;;
        --exact)
            shift
            OPT_EXACT="yes"
            ;;
        --display-pathname)
            shift
            OPT_PATHNAME="yes"
            ;;
        --debug)
            shift
            DEBUG="echo"
            ;;
        --)
            shift
            break
            ;;
    esac
done


if [ "${OPT_EXACT}" = "yes" ] ; then
    if [ ! -z ${2} ] ; then
        echo >&2 "argument error: --by-pkgfullname only takes one package at a time .."
        exit 1
    fi

    for p in $(list_beepackages "${filter}" ${1}) ; do
        pname=$(@BINDIR@/beeversion --pkgfullname "${p}")
        pfull=$(@BINDIR@/beeversion --pkgfullpkg  "${p}")
        if [ "${1}" = "${pname}"  ] ; then
            echo "${p}"
        fi
        if [ "${1}" = "${pfull}"  ] ; then
            echo "${p}"
        fi
        if [ "${1}" = "${p}" ] ; then
            echo "${p}"
        fi
    done
    exit 0
fi

# mach et einfach.. (just do it)
for p in "${@}" ; do
    list_beepackages "${filter}" ${p}
done
